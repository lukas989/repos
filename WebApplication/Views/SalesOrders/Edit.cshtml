@model Models.SalesOrderEdit

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(model => model.CustomerId, "CustomerId")
    @Html.HiddenFor(model => model.LastAuthor,  "LastAuthor")
    @Html.HiddenFor(model => model.LastUpdate,  "LastUpdate")
    @Html.HiddenFor(model => model.EntryAuthor, "EntryAuthor")
    @Html.HiddenFor(model => model.EntryDate,   "EntryDate")

    <div class="form-horizontal">
        <h4>SalesOrders</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.SalesOrderId)

        <div class="form-group">
            @Html.LabelFor(model => model.SalesOrderStatusId, "SalesOrderStatusId", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("SalesOrderStatusId", Model.SalesOrderStatusSelectListItem, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.SalesOrderStatusId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ExpectedDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.ExpectedDate, "{0:MM/dd/yyyy}", new { @class = "datepicker form-control" })
                @Html.ValidationMessageFor(model => model.ExpectedDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CurrencyId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CurrencyId, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CurrencyId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CurrencyRate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CurrencyRate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CurrencyRate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}


<p>
    @Html.ActionLink("New Line", "SelectProduct", "SalesOrderLines", new { salesOrderId = Model.SalesOrderId }, new { @class = "btn btn-default" })
</p>
<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.VSalesOrderLines.FirstOrDefault().SalesOrderLineNo)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.VSalesOrderLines.FirstOrDefault().ProductName)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.VSalesOrderLines.FirstOrDefault().OrderedQty)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.VSalesOrderLines.FirstOrDefault().PurchaseOrderPrice)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.VSalesOrderLines.FirstOrDefault().RecivedQty)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.VSalesOrderLines.FirstOrDefault().ExpectedDate)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.VSalesOrderLines.FirstOrDefault().DeliveryDate)
        </th>
        <th></th>
    </tr>

    @foreach (var item in Model.VSalesOrderLines)
    {
<tr>
    <td>
        @Html.DisplayFor(modelItem => item.SalesOrderLineNo)
    </td>
    <td>
        @Html.DisplayFor(modelItem => item.ProductName)
    </td>
    <td>
        @Html.DisplayFor(modelItem => item.OrderedQty)
    </td>
    <td>
        @Html.DisplayFor(modelItem => item.PurchaseOrderPrice)
    </td>
    <td>
        @Html.DisplayFor(modelItem => item.RecivedQty)
    </td>
    <td>
        @Html.DisplayFor(modelItem => item.ExpectedDate)
    </td>
    <td>
        @Html.DisplayFor(modelItem => item.DeliveryDate)
    </td>
    <td>
        @Html.ActionLink("Edit", "Edit", "SalesOrderLines", new { item.SalesOrderId, item.SalesOrderLineNo }, null) |
        @Html.ActionLink("Delete", "Delete", "SalesOrderLines", new { item.SalesOrderId, item.SalesOrderLineNo }, null)
    </td>
</tr>
    }

</table>

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/jqueryui")
    @Styles.Render("~/Content/cssjqryUi")

    <script type="text/javascript">
        $(document).ready(function () {
            $('.datepicker').datepicker({
                format: "mm/dd/yyyy",
                changeMonth: true,
                changeYear: true,
                yearRange: "-60:+0",
                language: "pl"
            });

        });
    </script>
}
