@model Models.PurchaseOrderEdit

@{
    ViewBag.Title = "Edit";
}
<link href="//cdn.rawgit.com/Eonasdan/bootstrap-datetimepicker/e8bddc60e73c1ec2475f827be36e1957af72e2ea/build/css/bootstrap-datetimepicker.css" rel="stylesheet">
<h2>Edit</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4>PurchaseOrders</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.PurchaseOrderId)

    <div class="form-group">
        @Html.LabelFor(model => model.PurchaseOrderStatusId, "PurchaseOrderStatusId", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("PurchaseOrderStatusId", Model.PurchaseOrderStatusList, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.PurchaseOrderStatusId, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.SupplierId, "SupplierId", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("SupplierId", Model.SupplierList, htmlAttributes: new { @class = "form-control", @disabled = "disabled" })
            @Html.HiddenFor(m => m.SupplierId)
            @Html.ValidationMessageFor(model => model.SupplierId, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ExpectedDate, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextBoxFor(model => model.ExpectedDate, "{0:MM/dd/yyyy}", new { @class = "datepicker form-control" })
            @*@Html.ValidationMessageFor(model => model.ExpectedDate, "", new { @class = "text-danger" })*@
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.CurrencyId, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.CurrencyId, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.CurrencyId, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.CurrencyRate, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.CurrencyRate, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.CurrencyRate, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.HiddenFor(model => model.EntryAuthor, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.HiddenFor(model => model.EntryAuthor, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.EntryAuthor, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.HiddenFor(model => model.EntryDate, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.HiddenFor(model => model.EntryDate, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.EntryDate, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.HiddenFor(model => model.LastAuthor, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.HiddenFor(model => model.LastAuthor, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.LastAuthor, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.HiddenFor(model => model.LastUpdate, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.HiddenFor(model => model.LastUpdate, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.LastUpdate, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Save" class="btn btn-default" />
        </div>
    </div>

        <table class="table">
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.VPurchaseOrderLines.FirstOrDefault().ProductName)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.VPurchaseOrderLines.FirstOrDefault().OrderedQty)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.VPurchaseOrderLines.FirstOrDefault().RecivedQty)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.VPurchaseOrderLines.FirstOrDefault().PriceTypeId)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.VPurchaseOrderLines.FirstOrDefault().PurchaseOrderPrice)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.VPurchaseOrderLines.FirstOrDefault().ExpectedDate)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.VPurchaseOrderLines.FirstOrDefault().EntryAuthor)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.VPurchaseOrderLines.FirstOrDefault().EntryDate)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.VPurchaseOrderLines.FirstOrDefault().LastAuthor)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.VPurchaseOrderLines.FirstOrDefault().LastUpdate)
                </th>
            </tr>

            @foreach (var item in Model.VPurchaseOrderLines)
            {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.ProductName)
            </td>

            <td>
                @Html.DisplayFor(modelItem => item.OrderedQty)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.RecivedQty)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.PriceTypeId)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.PurchaseOrderPrice)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ExpectedDate)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.EntryAuthor)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.EntryDate)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.LastAuthor)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.LastUpdate)
            </td>
            <td>
            @Html.ActionLink("Edit", "Edit", "PurchaseOrderLines", new { purchaseOrderId = item.PurchaseOrderId, purchaseOrderLineNo = item.PurchaseOrderLineNo }, null) @*|
        @Html.ActionLink("Details", "Details", new { /* id=item.PrimaryKey */ }) |
        @Html.ActionLink("Delete", "Delete", new { /* id=item.PrimaryKey */ })*@
            </td>
        </tr>
            }

        </table>

</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/jqueryui")
    @Styles.Render("~/Content/cssjqryUi")

    <script type="text/javascript">
        $(document).ready(function () {
            $('.datepicker').datepicker({
                format: "mm/dd/yyyy",
                changeMonth: true,
                changeYear: true,
                yearRange: "-60:+0",
                language: "pl"
            });

        });
    </script>
}