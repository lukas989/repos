@model Models.ReceiptPlansEdit

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>ReceiptPlans</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.ReceiptPlanId)

        <div class="form-group">
            @Html.LabelFor(model => model.ReceiptPlanStatusId, "ReceiptPlanStatusId", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("ReceiptPlanStatusId", Model.ReceiptPlanStatusSelectListItem, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ReceiptPlanStatusId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.SupplierId, "SupplierId", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("SupplierId", Model.SuppliersSelectListItem, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.SupplierId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ExpectedDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.ExpectedDate, "{0:MM/dd/yyyy}", new { @class = "datepicker form-control" })
                @*@Html.ValidationMessageFor(model => model.ExpectedDate, "", new { @class = "text-danger" })*@
            </div>
        </div>

        @Html.HiddenFor(model => model.EntryAuthor, htmlAttributes: new { @class = "control-label col-md-2" })
        @Html.HiddenFor(model => model.EntryDate, htmlAttributes: new { @class = "control-label col-md-2" })
        @Html.HiddenFor(model => model.LastAuthor, htmlAttributes: new { @class = "control-label col-md-2" })
        @Html.HiddenFor(model => model.LastUpdate, htmlAttributes: new { @class = "control-label col-md-2" })

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}


<p>
    @Html.ActionLink("New Line", "Create", "ReceiptPlanLines", new { receiptPlanId = Model.ReceiptPlanId, supplierId = Model.SupplierId }, new { @class = "btn btn-default" })
</p>
<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.VReceiptPlanLines.FirstOrDefault().Product)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.VReceiptPlanLines.FirstOrDefault().ExpectedQty)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.VReceiptPlanLines.FirstOrDefault().RecivedQty)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.VReceiptPlanLines.FirstOrDefault().OrderedQty)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.VReceiptPlanLines.FirstOrDefault().OrderRecivedQty)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.VReceiptPlanLines.FirstOrDefault().LastAuthor)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.VReceiptPlanLines.FirstOrDefault().LastUpdate)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.VReceiptPlanLines.FirstOrDefault().EntryAuthor)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.VReceiptPlanLines.FirstOrDefault().EntryDate)
        </th>

        <th></th>
    </tr>

    @foreach (var item in Model.VReceiptPlanLines)
    {
<tr>
    <td>
        @Html.DisplayFor(modelItem => item.Product)
    </td>
    <td>
        @Html.DisplayFor(modelItem => item.ExpectedQty)
    </td>
    <td>
        @Html.DisplayFor(modelItem => item.RecivedQty)
    </td>
    <td>
        @Html.DisplayFor(modelItem => item.OrderedQty)
    </td>
    <td>
        @Html.DisplayFor(modelItem => item.OrderRecivedQty)
    </td>
    <td>
        @Html.DisplayFor(model => model.LastAuthor)
    </td>
    <td>
        @Html.DisplayFor(model => model.LastUpdate)
    </td>
    <td>
        @Html.DisplayFor(model => model.EntryAuthor)
    </td>
    <td>
        @Html.DisplayFor(model => model.EntryDate)
    </td>

    <td>
        @Html.ActionLink("Edit", "Edit", new { /* id=item.PrimaryKey */ }) |
        @Html.ActionLink("Delete", "Delete", new { /* id=item.PrimaryKey */ })
    </td>
</tr>
    }

</table>


<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/jqueryui")
    @Styles.Render("~/Content/cssjqryUi")

    <script type="text/javascript">
        $(document).ready(function () {
            $('.datepicker').datepicker({
                format: "mm/dd/yyyy",
                changeMonth: true,
                changeYear: true,
                yearRange: "-60:+0",
                language: "pl"
            });

        });
    </script>
}
